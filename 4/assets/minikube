#!/bin/bash

export KUBERNETES_MASTER=http://host01:8080
case "$1" in
  "start")
    echo "Starting local Kubernetes cluster..."
    docker run --name minikube -d --hostname=host01 --volume=/:/rootfs:ro --volume=/sys:/sys:rw --volume=/var/lib/docker:/var/lib/docker:rw --volume=/var/lib/kubelet:/var/lib/kubelet:rw --volume=/var/run:/var/run:rw --net=host --pid=host --privileged gcr.io/google_containers/localkube-amd64:v1.5.2 /localkube start --apiserver-insecure-address=0.0.0.0 --apiserver-insecure-port=8080 --logtostderr=true --containerized > /dev/null
    id=$(docker inspect --format="{{.Config.Hostname}}" minikube)
    docker exec minikube bash -c "echo \"127.0.0.1 $id\" >> /etc/hosts"
    until $(curl -s host01:8080 &> /dev/null); do
      sleep 1
    done
    ;;
  "stop")
    echo "Stopping local Kubernetes cluster..."
    docker rm -f minikube > /dev/null
    echo "Kubernetes cluster stopped."
    ;;
  "version")
    echo "minikube version: v0.17.1-katacoda"
    ;;
  *)
  echo "Minikube is a CLI tool that provisions and manages single-node Kubernetes clusters optimized for development workflows."
  echo ""
  echo "Usage:"
  echo " minikube [command]"
  echo ""
  echo "Available Commands:"
  echo "start Starts a local kubernetes cluster."
  echo "stop Stops a running local kubernetes cluster."
  echo "version Print the version of minikube."
  exit 1
esac
